<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>tangerine702の小屋</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-12-09T09:07:42.605Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>tangerine702</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>js返回顶部平滑滚动及按钮自动隐藏</title>
    <link href="http://example.com/2022/12/09/js%E8%BF%94%E5%9B%9E%E9%A1%B6%E9%83%A8%E5%B9%B3%E6%BB%91%E6%BB%9A%E5%8A%A8%E5%8F%8A%E6%8C%89%E9%92%AE%E8%87%AA%E5%8A%A8%E9%9A%90%E8%97%8F/"/>
    <id>http://example.com/2022/12/09/js%E8%BF%94%E5%9B%9E%E9%A1%B6%E9%83%A8%E5%B9%B3%E6%BB%91%E6%BB%9A%E5%8A%A8%E5%8F%8A%E6%8C%89%E9%92%AE%E8%87%AA%E5%8A%A8%E9%9A%90%E8%97%8F/</id>
    <published>2022-12-09T03:39:54.000Z</published>
    <updated>2022-12-09T09:07:42.605Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>​        这几天因为喜欢看漫画，而个人也喜欢写点网站，索性就自己写了一个漫画推荐网站，上面记录下自己看完的漫画，包括观感如何都有打分，只不过这个分只是我个人主观得分而已</p><p>​        扯远了扯远了，本文是在做网站返回顶部这个功能(后面简称“回顶”)时得到的一些感想，希望我的这个文章可以给朋友们一点灵感🥱</p><p>​        起因是我在网路上搜索回顶功能代码，得到的基础功能是js设置点击事件给button使用scrollTop属性回顶到顶部，代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 点击按钮，返回顶部</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">topFunction</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.body.scrollTop = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">document</span>.documentElement.scrollTop = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>按着网上的思路写完了，实际点击也确实是能回到顶部，但是</p><p>怎么感觉哪里不够漂亮？</p><p>…..</p><p>哦，没有动画！</p><p>私认为动画是js以及网页操作的灵魂，没有动画就像是新年除夕夜上没有穿上红秋裤一样令人失望</p><p>所以，该怎么加动画呢</p><p>我又开始面向百度编程了（喜）</p><p>…..</p><p>经过一段时间的查找，我开始有了眉目：</p><p>果断抛弃scrollTop的设置顶部距离，换上我们的锚点链接！</p><p>同时换上一个可以操作滚动条的属性：<strong>scroll-behavior: smooth;</strong></p><p>具体代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span> <span class="attr">id</span>=<span class="string">&quot;html&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-id">#html</span> &#123;</span></span><br><span class="line">      scroll-behavior: smooth;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-class">.to-top</span> &#123;</span></span><br><span class="line">      position: fixed;</span><br><span class="line">      width: 60px;</span><br><span class="line">      height: 60px;</span><br><span class="line">      line-height: 60px;</span><br><span class="line">      bottom: 50px;</span><br><span class="line">      right: 100px;</span><br><span class="line"><span class="css">      <span class="selector-tag">background-color</span>: <span class="selector-id">#ddd</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#f4f5f7</span>;</span></span><br><span class="line">      border-radius: 18px;</span><br><span class="line">      font-size: 12px;</span><br><span class="line">      text-decoration: none;</span><br><span class="line">      text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.content</span> &#123;<span class="comment">/*代替网页中的很多条内容*/</span></span></span><br><span class="line">     width: 1200px;</span><br><span class="line">     height: 200px;</span><br><span class="line">     background-color: lightblue;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#html&quot;</span> <span class="attr">class</span>=<span class="string">&quot;to-top&quot;</span> <span class="attr">id</span>=<span class="string">&quot;gotop&quot;</span>&gt;</span>回到顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>现在是返回的功能和动画都有了，基本圆满了吧</p><p>哎，还没有</p><p>前几天我再在逛知乎的时候发现一个东西：</p><p>知乎的回顶按钮在一开始我页面本来在顶部时是没有的，等我小小的划了一下鼠标滚轮，哎，他就有了，等我再花上去又没有了</p><p>嘿，这玩意高级，不过思路也挺容易想的：</p><ol><li>做一个页面滑动事件，我只要一滑动页面它就会触发里面的代码</li><li>获得此时我的视窗离文档的顶部的距离</li><li>设置下距离顶部多少高度时将按钮display：block即可，按钮平常就设置none隐藏起来即可</li></ol><p>大致的js代码如下（这里我设置的低于100px隐藏）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">&#x27;scroll&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> px = <span class="built_in">parseInt</span>(<span class="built_in">document</span>.documentElement.scrollTop);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">parseInt</span>(px)&lt;=<span class="number">100</span>)&#123;</span><br><span class="line">      <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#gotop&#x27;</span>).style.display=<span class="string">&quot;none&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#gotop&#x27;</span>).style.display=<span class="string">&quot;block&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><hr><p>本文所有具体代码如下，有一些新增代码我都做了注释：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span> <span class="attr">id</span>=<span class="string">&quot;html&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    /* 设置需要滚动到的元素的 scroll-behavior 属性, </span><br><span class="line">这里我们设置了 html 元素（一般来说，如果是回到顶部的话，</span><br><span class="line">设置body和html的scroll-behavior属性，去到指定位置，</span><br><span class="line">则设置那个元素的scroll-behavior属性） */</span><br><span class="line"><span class="css">    <span class="selector-id">#html</span> &#123;</span></span><br><span class="line">      scroll-behavior: smooth;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-id">#main</span> &#123;</span></span><br><span class="line">      display: flex;</span><br><span class="line">      align-items: center;</span><br><span class="line">      flex-direction: column;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.to-top</span> &#123;</span></span><br><span class="line">      display: none;</span><br><span class="line">      position: fixed;</span><br><span class="line">      width: 60px;</span><br><span class="line">      height: 60px;</span><br><span class="line">      line-height: 60px;</span><br><span class="line">      bottom: 50px;</span><br><span class="line">      right: 100px;</span><br><span class="line"><span class="css">      <span class="selector-tag">background-color</span>: <span class="selector-id">#ddd</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#f4f5f7</span>;</span></span><br><span class="line">      border-radius: 18px;</span><br><span class="line">      font-size: 12px;</span><br><span class="line">      text-decoration: none;</span><br><span class="line">      text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.content</span> &#123;</span></span><br><span class="line">      width: 1200px;</span><br><span class="line">      height: 200px;</span><br><span class="line">      background-color: lightblue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-id">#p</span> &#123;    <span class="comment">/*显示距顶部多少px*/</span></span></span><br><span class="line">      position: fixed;</span><br><span class="line">      top: 0;</span><br><span class="line">      left: 0;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p&quot;</span>&gt;</span>0px<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 利用 a 标签，来导航到某个锚点，如果没有设置 </span></span><br><span class="line"><span class="comment">scroll-behavior: smooth 属性，浏览器会一瞬间就导航到了</span></span><br><span class="line"><span class="comment"> #html 位置，因为scrioll-behavior的默认值是auto(立即滚动)，</span></span><br><span class="line"><span class="comment">而smooth是平滑滚动的意思 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#html&quot;</span> <span class="attr">class</span>=<span class="string">&quot;to-top&quot;</span> <span class="attr">id</span>=<span class="string">&quot;gotop&quot;</span>&gt;</span>回到顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> p = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#p&#x27;</span>);</span></span><br><span class="line"><span class="javascript">  <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;scroll&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">//添加监听事件为滚动事件</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> px = p.innerHTML = <span class="built_in">parseInt</span>(<span class="built_in">document</span>.documentElement.scrollTop)+<span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span>(<span class="built_in">parseInt</span>(px)&lt;=<span class="number">100</span>)&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#gotop&#x27;</span>).style.display=<span class="string">&quot;none&quot;</span>;</span></span><br><span class="line"><span class="javascript">    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#gotop&#x27;</span>).style.display=<span class="string">&quot;block&quot;</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>具体关于scrioll-behavior的知识可以看MDN的解释：</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="code_js" scheme="http://example.com/tags/code-js/"/>
    
  </entry>
  
  <entry>
    <title>GitHub+Hexo创建博客</title>
    <link href="http://example.com/2022/06/18/GitHub-Hexo%E5%88%9B%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://example.com/2022/06/18/GitHub-Hexo%E5%88%9B%E5%BB%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2022-06-18T03:29:37.000Z</published>
    <updated>2022-06-18T05:24:44.408Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>填坑并优化细节描述…（这篇是2.0新版，处理了上一篇的某些错误，加强了稳定性和细节，so，我是最快最强哒！！！）</p><hr><p><strong>如何用Hexo和GitHub制作出个人博客(超详细小白版)</strong></p><p>我觉得使用一个工具之前，要先了解这个工具</p><p>当然，这个所谓的“Hexo”和”GitHub”也一样</p><p><strong>先看一段Hexo的官方定义：</strong></p><blockquote><p>Hexo 是一个快速、简洁且高效的<strong>博客框架</strong>。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p></blockquote><p><strong>关键词：博客框架、Markdown</strong></p><p> 然后是GitHub的：</p><blockquote><p>GitHub 是一个面向<a href="https://baike.baidu.com/item/%E5%BC%80%E6%BA%90/20720669">开源</a>及私有<a href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6/12053">软件</a>项目的<strong>托管</strong>平台，因为只支持<strong>Git</strong>作为唯一的版本库格式进行托管，故名 GitHub。</p></blockquote><p><strong>关键词：开源、托管平台、Git</strong></p><p>…</p><p>接下来，我会直接给出以上关键词的含义，不过度娘也有，看不懂我这个的可以去翻翻度娘</p><ol><li>博客框架：做博客都需要的框架，一般来说找一个稳定主流的就行，比如我们本文用到的Hexo</li><li>Markdown：一种标记语言，后缀名为.md</li><li>开源：指编写此软件/程序的代码全部公开的行为</li><li>托管平台：如果你没有自己单独的域名的话，某些网站会在它自己的域名下面替你建立一个子域名，比如本教程用到的GitHub</li><li>Git：是一个带有版本管理的分布式控制系统</li></ol><p><strong>简单来说就是我们编写后缀名为.md的markdown文件，然后由Hexo这个博客框架解析成界面，再由GitHub 的pages服务帮我们挂载到相应的GitHub域名的二级域名下</strong></p><p>Q：那GitHub的pages服务又是什么呢？</p><p>A：GitHub Pages 是由 GitHub 官方提供的一种免费的静态站点托管服务，让我们可以在 GitHub 仓库里托管和发布自己的静态网站页面。</p><p><strong>优点和不足</strong></p><p><strong>优点：</strong>完全免费；静态站点，轻量快速；可按需求自由定制改造；托管在 GitHub，安全省心；迁移方便……</p><p><strong>不足：</strong>发文不便，依赖于本地环境；更适合个人博客使用；GitHub 在国内访问速度有点不快。</p><p>准备事项以及注意事项：</p><ol><li>输入代码统一用英文输入法，不然会发生意外情况</li><li>本教程代码操作通体使用Git Bash进行输入操作</li></ol><p>了解了基础的知识，那我们开始教程：</p><hr><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>由于Hexo是由Node.js搭建而成，所以我们需要在本地电脑上安装Node.js，且上面说过代码需要使用Git Bash进行输入操作，所以必备工具Git也需要下载到你的本地电脑上，下面就是他们各自的官网，下载安装下一步即可：</p><p>Node.js：<a href="https://link.zhihu.com/?target=https://nodejs.org/zh-cn">官网</a>（建议选择LTS长期稳定版）</p><p>Git：<a href="https://git-scm.com/downloads">官网</a>（这个直接根据电脑系统安装<a href="https://git-scm.com/download/win">Windows</a>/<a href="https://git-scm.com/download/mac">macOS</a>/<a href="https://git-scm.com/download/linux">Linux/Unix</a>即可）</p><p>安装完成后，Win+R 输入 cmd 并打开，依次输入 <code>node -v</code>、<code>npm -v</code> 和 <code>git --version</code> 并回车，出现版本号即可（最后那个git -version如果出现’git’ 不是内部或外部命令，也不是可运行的程序<br>或批处理文件基本也没问题，查看鼠标右键菜单有无Git Bash Here，有即可）</p><h3 id="连接GitHub"><a href="#连接GitHub" class="headerlink" title="连接GitHub"></a>连接GitHub</h3><p>1.首先打开GitHub官网，输入相关信息并注册</p><p><img src= "/img/loading.gif" data-lazy-src="https://my-main-blog-image.oss-cn-beijing.aliyuncs.com/work_img/3.%E4%B8%AA%E4%BA%BAblog/GitHub%E5%AE%98%E7%BD%91.png" alt="GitHub官网"></p><p>2.桌面右键 -&gt; Git Bash Here，<strong>设置用户名和邮箱</strong>：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class="line">git config --global user.email &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure><p><strong>创建 SSH 密匙</strong>：</p><p>输入 <code>ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;</code>，然后一路回车直到出现这样的界面，图中所示的文件地址就是你的密匙地址：</p><p><img src= "/img/loading.gif" data-lazy-src="https://my-main-blog-image.oss-cn-beijing.aliyuncs.com/work_img/3.%E4%B8%AA%E4%BA%BAblog/ssh%E5%AF%86%E9%92%A5.png" alt="ssh密钥"></p><p><strong>添加密匙：</strong></p><p>进入 [C:\Users\用户名.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。</p><p>登陆 GitHub ，点击头像旁边的倒三角图标进入 Settings 页面，</p><p><img src= "/img/loading.gif" data-lazy-src="https://my-main-blog-image.oss-cn-beijing.aliyuncs.com/work_img/3.%E4%B8%AA%E4%BA%BAblog/%E5%80%92%E4%B8%89%E8%A7%92.png" alt="倒三角"></p><p><img src= "/img/loading.gif" data-lazy-src="https://my-main-blog-image.oss-cn-beijing.aliyuncs.com/work_img/3.%E4%B8%AA%E4%BA%BAblog/%E5%80%92%E4%B8%89%E8%A7%92%E6%8B%89%E6%9D%A1.png" alt="倒三角拉条"></p><p>选择左边栏的 SSH and GPG keys，点击 New SSH key。</p><p><img src= "/img/loading.gif" data-lazy-src="https://my-main-blog-image.oss-cn-beijing.aliyuncs.com/work_img/3.%E4%B8%AA%E4%BA%BAblog/%E5%A1%AB%E5%86%99%E5%AF%86%E9%92%A5.png" alt="填写密钥"></p><p><img src= "/img/loading.gif" data-lazy-src="https://my-main-blog-image.oss-cn-beijing.aliyuncs.com/work_img/3.%E4%B8%AA%E4%BA%BAblog/%E6%96%B0%E5%BB%BAssh%E5%AF%86%E9%92%A5.png" alt="新建ssh密钥"></p><p>Title 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSH key，得到一个SSH密钥<br><img src= "/img/loading.gif" data-lazy-src="https://my-main-blog-image.oss-cn-beijing.aliyuncs.com/work_img/3.%E4%B8%AA%E4%BA%BAblog/SSH%E5%9B%BE%E7%89%87.png" alt="SSH图片"></p><p><strong>验证连接：</strong></p><p>打开 Git Bash，输入 <code>ssh -T git@github.com</code> 出现 “Are you sure……”，输入 yes 回车确认。</p><p>显示 “Hi xxx! You’ve successfully……” 即连接成功。</p><h3 id="创建-Github-Pages-仓库"><a href="#创建-Github-Pages-仓库" class="headerlink" title="创建 Github Pages 仓库"></a>创建 Github Pages 仓库</h3><p>Github主页右上角加号→New repository：</p><ul><li>Repository name 中输入 <code>用户名.github.io</code></li><li>勾选 “Initialize this repository with a README”</li><li>Description 可以选填</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://my-main-blog-image.oss-cn-beijing.aliyuncs.com/work_img/3.%E4%B8%AA%E4%BA%BAblog/%E4%BB%93%E5%BA%93%E8%AE%BE%E7%BD%AE.jpg" alt="仓库设置"></p><p>创建后默认自动启用 HTTPS，博客地址为：<code>https://用户名.github.io</code></p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>桌面右键点击“Git Bash Here”进入小黑框</p><p>使用 npm 一键安装 Hexo 博客程序：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>Mac 用户需要管理员权限（sudo），运行这条命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>倒数第二行出现一个+ hexo-cli@版本号格式的一句话就表明你已经安装成功了</p><p>关闭桌面的这个小黑框</p><h3 id="创立博客文件夹并安装依赖and初始化"><a href="#创立博客文件夹并安装依赖and初始化" class="headerlink" title="创立博客文件夹并安装依赖and初始化"></a>创立博客文件夹并安装依赖and初始化</h3><p>在你电脑的任何一个盘里创建一个用于存放博客本地文件的文件夹</p><p>例如在D盘里新建一个hexo文件夹，里面新建一个“blog”文件夹用于存放博客资源</p><p>在blog文件夹内部**(注意不是hexo里面，而是hexo里面的blog)**</p><p>blog文件夹也可以称为“博客根目录”</p><p>右键“Git Bash Here”打开博客文件夹里这个小黑框</p><p><strong>初始化并安装所需组件：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init      # 初始化</span><br><span class="line">npm install    # 安装组件</span><br></pre></td></tr></table></figure><p>完成后依次输入下面命令，<strong>启动本地服务器进行预览</strong>：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g   # 生成页面</span><br><span class="line">hexo s   # 启动预览</span><br></pre></td></tr></table></figure><p><strong>访问</strong> <code>http://localhost:4000</code><strong>，出现 Hexo 默认页面，本地博客安装成功！</strong></p><blockquote><p><strong>Tips：</strong>如果出现页面加载不出来，可能是端口被占用了。Ctrl+C 关闭服务器，运行 <code>hexo server -p 5000</code> 更改端口号后重试。</p></blockquote><p>Hexo 博客文件夹目录结构如下：</p><p><img src= "/img/loading.gif" data-lazy-src="https://my-main-blog-image.oss-cn-beijing.aliyuncs.com/work_img/3.%E4%B8%AA%E4%BA%BAblog/%E6%96%87%E4%BB%B6%E5%A4%B9%E7%BB%93%E6%9E%84.jpg" alt="文档结构"></p><h3 id="部署-Hexo-到-GitHub-Pages"><a href="#部署-Hexo-到-GitHub-Pages" class="headerlink" title="部署 Hexo 到 GitHub Pages"></a>部署 Hexo 到 GitHub Pages</h3><p>本地博客测试成功后，就是上传到 GitHub 进行部署，使其能够在网络上访问。</p><p>首先<strong>安装 hexo-deployer-git</strong>：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后<strong>修改 _config.yml</strong> 文件末尾的 Deployment 部分，修改成如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:用户名/用户名.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>完成后运行 <code>hexo d</code> 将网站上传部署到 GitHub Pages。</p><p>完成！这时访问我们的 GitHub 域名 <code>https://用户名.github.io</code> 就可以看到 Hexo 网站了。</p><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><h3 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a><strong>发布文章</strong></h3><p>进入博客所在目录，右键打开 Git Bash Here，创建博文：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;My New 0ne_Post&quot;</span><br></pre></td></tr></table></figure><p>然后 source 文件夹中会出现一个 My New one_Post.md 文件，就可以使用 Markdown 编辑器在该文件中撰写文章了。</p><p>写完后运行下面代码将文章渲染并部署到 GitHub Pages 上完成发布。<strong>以后每次发布文章都是这两条命令。</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g   # 生成页面</span><br><span class="line">hexo d   # 部署发布</span><br></pre></td></tr></table></figure><hr><p>也可以不使用命令自己创建 .md 文件，只需在文件开头手动加入如下格式 Front-matter 即可，写完后运行 <code>hexo g</code> 和 <code>hexo d</code> 发布。</p><blockquote><p>上面的命令是不是很长，其实也可以把它们压缩成一句话：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d#生成页面并发布</span><br></pre></td></tr></table></figure></blockquote><p>文章格式的示范↓：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World # 标题</span><br><span class="line">date: 2019/3/26 hh:mm:ss # 时间</span><br><span class="line">categories: # 分类</span><br><span class="line">- Diary</span><br><span class="line">tags: # 标签</span><br><span class="line">- PS3</span><br><span class="line">- Games</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">摘要</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">正文</span><br></pre></td></tr></table></figure><p><strong>文章可以拥有如下属性：</strong></p><table><thead><tr><th align="center">-</th><th>Setting</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td align="center">1</td><td>layout</td><td>Layout</td><td>post或page</td></tr><tr><td align="center">2</td><td>title</td><td>文章的标题</td><td></td></tr><tr><td align="center">3</td><td>date</td><td>创建日期</td><td>文件的创建日期</td></tr><tr><td align="center">4</td><td>updated</td><td>修改日期</td><td>文件的修改日期</td></tr><tr><td align="center">5</td><td>comments</td><td>是否开启评论</td><td>true</td></tr><tr><td align="center">6</td><td>tags</td><td>标签</td><td></td></tr><tr><td align="center">7</td><td>categories</td><td>分类</td><td></td></tr><tr><td align="center">8</td><td>permalink</td><td>url中的名字</td><td>文件名</td></tr></tbody></table><p>一般带有文章头图的博客主题（Theme）会有cover头图属性，不过这个图需要可以网路上能访问到</p><h4 id="网站设置"><a href="#网站设置" class="headerlink" title="网站设置"></a><strong>网站设置</strong></h4><p>包括网站名称、描述、作者、链接样式等，全部在网站目录下的 _config.yml 文件中，参考<a href="https://link.zhihu.com/?target=https://hexo.io/zh-cn/docs/configuration">官方文档</a>按需要编辑。</p><p>注意：冒号后要加一个空格！</p><p>好了，GitHub+Hexo的建站文章写完了，如果想更换主题可以参考我的另一篇文章：<a href="https://tangerine702.github.io/2020/09/28/Hexo%E7%B4%A0%E9%94%A6%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/">地址</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Hexo主题" scheme="http://example.com/categories/Hexo%E4%B8%BB%E9%A2%98/"/>
    
    
    <category term="个人博客" scheme="http://example.com/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>关于我的新耳机-水月雨猫饼</title>
    <link href="http://example.com/2021/11/28/%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84%E6%96%B0%E8%80%B3%E6%9C%BA-%E6%B0%B4%E6%9C%88%E9%9B%A8%E7%8C%AB%E9%A5%BC/"/>
    <id>http://example.com/2021/11/28/%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84%E6%96%B0%E8%80%B3%E6%9C%BA-%E6%B0%B4%E6%9C%88%E9%9B%A8%E7%8C%AB%E9%A5%BC/</id>
    <published>2021-11-28T03:13:27.000Z</published>
    <updated>2022-12-09T11:57:46.706Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>水月雨Moonrop Nekocake猫饼</p><h2 id="1-序言"><a href="#1-序言" class="headerlink" title="1.序言"></a>1.序言</h2><p>   关于水月雨，我也体验过200元内的几乎所有的入耳有线耳机了，2<em>夸克、1</em>银船、1*SSP，本来双11想冲一条Aria咏叹调来着，奈何这又在199价位出了一消费级TWS真无线耳机——猫饼，看到预售，说明我是第一批，冲！</p><h2 id="2-外观"><a href="#2-外观" class="headerlink" title="2.外观"></a>2.外观</h2><p>   我没在水月雨官店冲，反而是在经销商 客Ting【Ting姬】处购得，这样我就能同时夸奖两个店家了（笑），拿到盒子是付预售款的后一天，对，就是第二天晚上7点，不得不说Ting姬的发货速度就是快！顺丰一天就从天津坐飞机到了我这里。</p><p>   说回外观：拿到盒子的一瞬间，看到了巧克力？？啊不对，应该是水月姬吧？[疑惑]</p><p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/5.%E5%85%B3%E4%BA%8E%E6%96%B0%E8%80%B3%E6%9C%BA%E7%8C%AB%E9%A5%BC/1.jpg" alt="盒子正面"></p><p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/5.%E5%85%B3%E4%BA%8E%E6%96%B0%E8%80%B3%E6%9C%BA%E7%8C%AB%E9%A5%BC/2.jpg" alt="盒子背面"></p><p>​    盒子是采用抽拉式设计，向上或者向下一推即可打开，打开后看到有一个印着水月雨标的。。。嗯。。深蓝色的盒子，表面上有一层反射银光的点点，对着灯光晃一晃有点星河那味</p><p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/5.%E5%85%B3%E4%BA%8E%E6%96%B0%E8%80%B3%E6%9C%BA%E7%8C%AB%E9%A5%BC/3.jpg" alt="水月雨"></p><p>   两侧有缺口，可以轻易提拉起来[这可不像你啊水月雨，以前不管是夸克还是SSP都非常难打开盒子，阻尼大的离谱，不过也可能是修改的这种缺口设计起了作用]</p><p>   打开后就露出了猫饼的真面目——是一个…黑色的塑料，极其敷衍的塑料，我只能说这波应该是把预算都整到了耳机上，啊，这波不亏啊</p><p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/5.%E5%85%B3%E4%BA%8E%E6%96%B0%E8%80%B3%E6%9C%BA%E7%8C%AB%E9%A5%BC/4.jpg" alt="真面目"></p><p>   拿出用袋子包裹的耳机盒和卡在塑料上的耳机，放进耳机盒里，再拿起敷衍的黑色塑料，发现里面竟然有标配华强北Type-c充电线，啊，最起码还送了对吧，不亏不亏</p><p>   压在充电线下面的还有一个售后小纸片和一本极为厚重的(三星使用手册(x))猫饼说明书（√）</p><p>   本来以为功能多到需要这么一本手册帮用户熟悉了么？结果里面竟然是中文、英文和日文三语版，hhhh笑了</p><p>   ​    耳机本身是塑料？特别轻，佩戴也没有我手里那紫米ppp开降噪之后堵耳朵的感觉，还有耳机盒也是塑    料，盒子顶部有做防滑纹的设计，上面印着NekoPARA啊不不不， Moonrop Nekocake（原谅我，这个设计太容易看错了）</p><p>下面是全套展示：</p><p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/5.%E5%85%B3%E4%BA%8E%E6%96%B0%E8%80%B3%E6%9C%BA%E7%8C%AB%E9%A5%BC/5.jpg" alt="全套展示"></p><h2 id="3-音质"><a href="#3-音质" class="headerlink" title="3.音质"></a>3.音质</h2><p>   说完了这个轻盈的外观，我们讲讲音质</p><p>   简单点说：这次的音质不能说无敌吧，吊打同价位的TWS耳机是一定没问题的</p><p>   此处正在测试渡口和一些常听的歌</p><p>   就听感来说，算是199价位的超值了，还是水月雨家的调音（默认调音），其他还有以下这几种</p><p>声音比较薄，但是好在声场听宽阔，就像比较矮的扇形一样</p><h2 id="4-ANC降噪"><a href="#4-ANC降噪" class="headerlink" title="4.ANC降噪"></a>4.ANC降噪</h2><p>   ANC降噪也有配备，初始是需要长按左右任意耳机的触摸区域三秒即可听到水月姬的“ANC ON！”提示音，不过如果你要是在听歌时开的话你的歌会突然没声音，然后滴的一声，再然后是提示音，然后再恢复正常，总的来说降噪可以，但是打开的过程有点哭笑不得</p><h2 id="5-语音切换提示水月姬"><a href="#5-语音切换提示水月姬" class="headerlink" title="5.语音切换提示水月姬"></a>5.语音切换提示水月姬</h2><p>   不说了，水月姬是老婆！</p><h2 id="6-小功能"><a href="#6-小功能" class="headerlink" title="6.小功能"></a>6.小功能</h2><p>   缺少摘下及停的功能，不得不说这个小功能初听上去挺影响用户体验，不过我愣是给用习惯了hhh</p><h2 id="7-结束"><a href="#7-结束" class="headerlink" title="7.结束"></a>7.结束</h2><p>   写完这篇文章的时候（就是今天）她已经经由顺丰小哥之手转向我们群主之手了，幸好还有相册里存的几张照片，哈哈，也算是我和水月姬的一段往事了，曾经她陪我一起睡觉（大雾），陪我写作业，陪我干过不少事，送走她的时候我还有点不舍，不过，一切都要向前看，只要我们不停下，道路就会不断延伸的！（滑稽）</p><p><img src= "/img/loading.gif" data-lazy-src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/5.%E5%85%B3%E4%BA%8E%E6%96%B0%E8%80%B3%E6%9C%BA%E7%8C%AB%E9%A5%BC/6.jpg" alt="猫饼"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="产品测评报告" scheme="http://example.com/categories/%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%84%E6%8A%A5%E5%91%8A/"/>
    
    
    <category term="TWS无线耳机" scheme="http://example.com/tags/TWS%E6%97%A0%E7%BA%BF%E8%80%B3%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>做一个属于自己的IDEA</title>
    <link href="http://example.com/2021/07/02/%E5%81%9A%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84IDEA/"/>
    <id>http://example.com/2021/07/02/%E5%81%9A%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84IDEA/</id>
    <published>2021-07-02T11:53:32.000Z</published>
    <updated>2021-07-08T05:52:34.245Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="做一个属于自己的IDEA"><a href="#做一个属于自己的IDEA" class="headerlink" title="做一个属于自己的IDEA"></a>做一个属于自己的IDEA</h2><p>事情还要从两天前说起</p><p>那时我还在用VSCode，仍然沉迷于One Dark Pro主题的时候</p><p>发现了这么个东西</p><p>IDEA！</p><p>本着是个编译器我都喜欢下载下来玩玩的习惯我把它下载了下来</p><p>即使我电脑里还有</p><p><strong>Code::Blocks</strong></p><p> <strong>dev</strong> </p><p><strong>eclipse</strong> </p><p> <strong>VS</strong> </p><p><strong>VSCode</strong>(滑稽)</p><p>啊不对，还差一个Android Studio</p><p>​    </p><p>毫不犹豫的下载了社区版，因为专业版用不到（社区版免费）</p><p>第一次打开的时候感觉“  ？”</p><p>真的没什么感觉，就一股通用设计风格的味道</p><p>好在因为可以写Java，我便将它留了下来</p><p>​    </p><p>昨天写了一天Java，感觉可以替代<strong>eclipse</strong> 了哈哈</p><p>————————————–更新线[21.07.06]——————————————-</p><p>其实就是一个插件的问题</p><p>首先在IDEA点击文件→设置→插件</p><p>打开插件界面，选择Marketplace</p><p>在搜索框搜索“Background Image Plus +”,下面可直接复制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Background Image Plus +</span><br></pre></td></tr></table></figure><p>找到以后选择安装即可，安装后提示你重启IDEA即可使用该插件</p><p>重启后会发现视图菜单下面会出现一个Background Image Plus</p><p>下面自己搞，我就不用教你了，懂得都懂（滑稽）(●’◡’●)</p><p>这个插件在我电脑上没有那个调节透明度的选项，所以如果你也安装上后没有的话可以参考我下面碎碎念的解决方法哦(￣y▽,￣)╭ </p><p>​    </p><p>​    </p><p>​    </p><hr><p>以下是作者的一些碎碎念~</p><p>​    </p><p>其实这插件原本叫Background Image Plus ，只不过很多人装上之后可以通过视图子菜单调整透明度之类的操作，在我这愣是不给我出来，本来想着这个可能会有，结果也是一样，被迫只能另寻他路</p><p>嗨，您猜怎么着，还真让我找到了</p><p>点击文件→设置，选择外观和行为中的第一项“外观”，从上往下你会发现有一个UI选项，下面会有一个小圆角矩形，写着背景图像，点击即可获得缺失的背景透明度等同等的效果！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于正规的md文件写法小知识</title>
    <link href="http://example.com/2021/06/24/%E5%85%B3%E4%BA%8E%E6%AD%A3%E8%A7%84%E7%9A%84md%E6%96%87%E4%BB%B6%E5%86%99%E6%B3%95%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    <id>http://example.com/2021/06/24/%E5%85%B3%E4%BA%8E%E6%AD%A3%E8%A7%84%E7%9A%84md%E6%96%87%E4%BB%B6%E5%86%99%E6%B3%95%E5%B0%8F%E7%9F%A5%E8%AF%86/</id>
    <published>2021-06-24T11:08:31.000Z</published>
    <updated>2021-06-25T08:05:21.539Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="关于正规的md文件写法小知识"><a href="#关于正规的md文件写法小知识" class="headerlink" title="关于正规的md文件写法小知识"></a>关于正规的md文件写法小知识</h2><p>这篇文章主要是记录一下markdown文件(简称md文件)的正规写法，以及我自身犯过的错误也一并写出来，供大家参考</p><p>接下来进入正题：</p><ol><li><p>乱用一级、二级等大标题</p><p>​     ♦刚开始写md文的时候，感觉需要不同大小的粗体字，奈何md自带的粗体不能满足我ಥ◡ಥ，便想到了可以用标题来解决，等我写了很多文章的时候，粗看是没什么问题的，不过等我扔到blog上去的时候，blog自带的目录就乱七八糟的，哎，那可叫一个屮啊，到现在我还没有整理好（其实是懒）</p></li><li><p>不会分段，大段的文字看起来格外的累</p><p>​      ♦这个的话一般小学中学写作文就能体会到，文章不会分段的话经常纸上就一坨一坨的你懂吧，看的时候就难受，所以分好段落也是文章的一个很重要的部分，排版干净嘛！</p></li><li><p>……..</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于动态壁纸的准备与制作</title>
    <link href="http://example.com/2021/03/26/%E5%85%B3%E4%BA%8E%E5%8A%A8%E6%80%81%E5%A3%81%E7%BA%B8%E7%9A%84%E5%87%86%E5%A4%87%E4%B8%8E%E5%88%B6%E4%BD%9C/"/>
    <id>http://example.com/2021/03/26/%E5%85%B3%E4%BA%8E%E5%8A%A8%E6%80%81%E5%A3%81%E7%BA%B8%E7%9A%84%E5%87%86%E5%A4%87%E4%B8%8E%E5%88%B6%E4%BD%9C/</id>
    <published>2021-03-26T13:28:45.000Z</published>
    <updated>2021-03-29T08:43:53.231Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>经常在网上发现一些很不错的动态壁纸，由于全是别人做的，当自己发现一个很好<strong>很有意境</strong>（滑稽）的壁纸时没法把它变成动态的，有点遗憾</p><p>不过别担心，本教程手把手教你做自己的动态壁纸！</p><p>let‘s go！😎</p><h2 id="🔸第一步"><a href="#🔸第一步" class="headerlink" title="🔸第一步"></a>🔸第一步</h2><p>准备一张想变成动态的壁纸，<strong>最好是人物类</strong></p><p><strong>因为轮廓清晰所以一些步骤很好做</strong></p><p>风景画也不是不可以，不过还是建议找一张人物图自己做一遍熟悉熟悉步骤</p><p>然后再啃这个难啃的骨头</p><p>–</p><p>打开你的PS，把这张图片<strong>导入到PS(Photoshop)中</strong></p><p>此时你是一张背景图的状态</p><p>双击右下角的背景图层，在弹出的对话框中<strong>点击确认</strong></p><p>将背景图层解锁后，我们就可以将你想动的地方抠出来了</p><p>这个东西的原理就是把需要动的部位单独做出来，然后补出被刚才扣出部位所遮挡的部分即可</p><p>例如你要把手扣出来，而手挡住了后面蝴蝶结的一部分，这时你就需要将手单独做一个图层后将后面被遮挡而导致残缺的蝴蝶结补充完整</p><p><img src="https://i.loli.net/2021/03/26/PQ5VuFxvNGRjO7f.jpg"></p><p>就这样处理好了全部的部位后</p><p>我们就可以进入下一部分了！</p><hr><h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p>打开AE(Adobe After Effects CC)</p><p>找到Auto sway摆动脚本，<strong>顾名思义就是生成一段有规律的摆动效果的片段，建议在做头发动作时用，这里仅用手来演示</strong></p><p>使用钉子工具(或者<strong>人偶位置控点工具</strong>)定点应用自动生成</p><p>具体样式如下（图糊了见谅）</p><p><img src="https://i.loli.net/2021/03/26/m6QwVXs7z4aujLb.png"></p><p>选择手指上的三个点作为动点生成，最左边的点做固定点（轴）点击Apply生成即可</p><p>完啦！一共就两步，剩下的就需要你自己重复操作了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="动画 壁纸" scheme="http://example.com/categories/%E5%8A%A8%E7%94%BB-%E5%A3%81%E7%BA%B8/"/>
    
    
    <category term="壁纸动画 简单" scheme="http://example.com/tags/%E5%A3%81%E7%BA%B8%E5%8A%A8%E7%94%BB-%E7%AE%80%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>植物大战僵尸自制教程(皮肤修改)</title>
    <link href="http://example.com/2021/02/23/%E6%A4%8D%E7%89%A9%E5%A4%A7%E6%88%98%E5%83%B5%E5%B0%B8%E8%87%AA%E5%88%B6%E6%95%99%E7%A8%8B-%E7%9A%AE%E8%82%A4%E4%BF%AE%E6%94%B9/"/>
    <id>http://example.com/2021/02/23/%E6%A4%8D%E7%89%A9%E5%A4%A7%E6%88%98%E5%83%B5%E5%B0%B8%E8%87%AA%E5%88%B6%E6%95%99%E7%A8%8B-%E7%9A%AE%E8%82%A4%E4%BF%AE%E6%94%B9/</id>
    <published>2021-02-23T12:35:33.000Z</published>
    <updated>2021-06-12T08:40:48.467Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>前几天突然想玩植物大战僵尸了，不过因为以前已经全通关了(指拿到了银向日葵奖杯，我是个菜鸡哈哈)</p><p>玩了一段时间(也就两天)突然想自制一个植物，让我玩到修改器的感觉（滑稽），遂找寻教程</p><h1 id="以上就是这篇文章诞生的原因【闲的】"><a href="#以上就是这篇文章诞生的原因【闲的】" class="headerlink" title="以上就是这篇文章诞生的原因【闲的】"></a>以上就是这篇文章诞生的原因【闲的】</h1><p>哈哈，开始教程：</p><h3 id="首先你得拿到一份植物大战僵尸的游戏，如果没有的话推荐点击下载"><a href="#首先你得拿到一份植物大战僵尸的游戏，如果没有的话推荐点击下载" class="headerlink" title="首先你得拿到一份植物大战僵尸的游戏，如果没有的话推荐点击下载"></a>首先你得拿到一份植物大战僵尸的游戏，如果没有的话推荐点击<a href="http://pvz4.lonelystar.org/download.htm">下载</a></h3><p>如果我猜的没错的话差不多是这样的：</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/06/ApClRagk65oyrIM.jpg" alt="梦开始的地方"></p><p>一般人都知道点击最下面exe是开始游戏，不过咱整点不一样的</p><p>看到上面图有个main.pak，哎~本篇文章讲的就是它：</p><p><code>如果不一样也没关系，找到main.pak文件就可以</code></p><h3 id="首先需要下方提供的文件提取器："><a href="#首先需要下方提供的文件提取器：" class="headerlink" title="首先需要下方提供的文件提取器："></a>首先需要下方提供的文件提取器：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">链接：https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1HHtxd-awm3dTiPXFbpPlrQ </span><br><span class="line">提取码：zjxg </span><br><span class="line">复制这段内容后打开百度网盘手机App，操作更方便哦</span><br></pre></td></tr></table></figure><p>下载后发现</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/06/TOWJbsVF1X2D36k.jpg" alt="xgq解包.jpg"></p><h4 id="首先选择解包模式"><a href="#首先选择解包模式" class="headerlink" title="首先选择解包模式"></a>首先选择解包模式</h4><p>上面一行pak文件选择你下载的植物大战僵尸的文件目录中的main.pak文件</p><p>下面一行选择你想把解出来的文件包放在哪里（记好这个目录，等会马上用到）</p><p>确认无误后点击执行</p><p>这时你发现电脑有点卡</p><p>没事，这是正常现象</p><p>等提示解包完毕或者一个提示框突然弹出来</p><p>恭喜，你已经解包成功了！</p><p>然后就结束啦，完结撒花！<del>~</del></p><p>。。。。</p><p>才怪嘞！</p><h3 id="接下来找到刚才你把包输出的地方（其实就是你上面第二行填的目录那里）"><a href="#接下来找到刚才你把包输出的地方（其实就是你上面第二行填的目录那里）" class="headerlink" title="接下来找到刚才你把包输出的地方（其实就是你上面第二行填的目录那里）"></a>接下来找到刚才你把包输出的地方（其实就是你上面第二行填的目录那里）</h3><p>出现一个pak文件夹</p><p>点击进入它</p><p>发现一堆文件：compiled，data，images等</p><p><strong>这次我们主要修改的就是images文件夹和倒数第二个reamin文件夹</strong></p><blockquote><p>首先说明：</p><p>pak文件最好备份一份，否则改错了只能重新解包，比较麻烦</p><p>images是存放地图和一些启动图的地方，最好是直接在原图上修改，避免改错了出麻烦</p><p>reanim是存放植物和僵尸身体各部分的贴图的地方，动作文件有个后缀是.fla，这个文件暂时不要动，其他的可以轻度在原图上改改，比如画个滑稽脸嘻嘻</p></blockquote><p>等你改完了，我们还需要再打开一次刚才你下载的提取器，点击打包模式，选择刚才你解包选择的那个main.pak文件</p><p>紧接着选择你已经修改完的pak文件</p><p>点击执行！</p><p>还是熟悉的电脑一阵卡顿后，弹出提示框表示：爷已经打好包了，你快给我进去看看！</p><p>发现修改完毕，OK，你已经迈入了魔改植物大战僵尸的第一步啦！~</p><p>庆祝撒花<em>★,°</em>:.☆(￣▽￣)/$:<em>.°★</em> 。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="游戏, 自制" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F-%E8%87%AA%E5%88%B6/"/>
    
    
    <category term="游戏修改自制" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E4%BF%AE%E6%94%B9%E8%87%AA%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>解决GitHub图片打不开的问题</title>
    <link href="http://example.com/2021/02/16/%E8%A7%A3%E5%86%B3GitHub%E5%9B%BE%E7%89%87%E6%89%93%E4%B8%8D%E5%BC%80%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2021/02/16/%E8%A7%A3%E5%86%B3GitHub%E5%9B%BE%E7%89%87%E6%89%93%E4%B8%8D%E5%BC%80%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2021-02-16T03:38:00.000Z</published>
    <updated>2021-11-22T01:15:27.566Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>提示：此文章转载自CSDN上的Antrn博主的文章：<a href="https://blog.csdn.net/qq_38232598/article/details/91346392">【最新】解决Github网页上图片显示失败的问题</a></p><p>有兴趣的可以去瞧瞧。这位博主分析的很全，小生受教了</p></blockquote><p>由于Github是国外的服务器，而上面存储图片的服务器也是在国外，所以国内的用户有时会出现图片不能显示的情况，这可能是</p><ol><li>dns被污染了</li><li>host设置错误</li><li>官方更新了dns，而用户电脑上没有同步更新dns导致不同步所发生的错误</li></ol><p>所以解决方法也很简单，找到C:\Windows\System32\drivers\etc\hosts这个路径，用记事本或者任何能阅读并修改它的软件打开（例如Sublime Text或者vscode等）</p><p>在文件的最后一行添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"># GitHub Start </span><br><span class="line">140.82.113.3      github.com</span><br><span class="line">140.82.114.20     gist.github.com</span><br><span class="line"></span><br><span class="line">151.101.184.133    assets-cdn.github.com</span><br><span class="line">151.101.184.133    raw.githubusercontent.com</span><br><span class="line">199.232.28.133     raw.githubusercontent.com </span><br><span class="line">151.101.184.133    gist.githubusercontent.com</span><br><span class="line">151.101.184.133    cloud.githubusercontent.com</span><br><span class="line">151.101.184.133    camo.githubusercontent.com</span><br><span class="line">199.232.96.133     avatars.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars0.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars0.githubusercontent.com</span><br><span class="line">199.232.28.133     avatars0.githubusercontent.com </span><br><span class="line">199.232.28.133     avatars1.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars1.githubusercontent.com</span><br><span class="line">151.101.108.133    avatars1.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars2.githubusercontent.com</span><br><span class="line">199.232.28.133     avatars2.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars3.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars3.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars4.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars4.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars5.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars5.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars6.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars6.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars7.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars7.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars8.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars8.githubusercontent.com</span><br><span class="line">199.232.96.133     avatars9.githubusercontent.com</span><br><span class="line"></span><br><span class="line"># GitHub End</span><br></pre></td></tr></table></figure><p>保存即可</p><p>然后使用命令行刷新本机的dns</p><p>win键+R输入cmd打开命令行</p><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig &#x2F;flushdns</span><br></pre></td></tr></table></figure><p>即可</p><p>如果还是不显示可以试着重启一下电脑，一般就可以了</p><hr><p>还有一情况，Github在2021年2月23日大概12点~2点左右挂过一会，不知道是我的地址设置问题还是那一会都这样，上述时间内我用手机登录个人的Github站点和去hexo登录其他dalao挂在Github的站点均出现了连接已重置问题，f12错误提示<strong>ERR_CONNECTION_RESET</strong></p><p>而在5点左右我采用了csdn大佬卢子墨的解决方法后<a href="https://blog.csdn.net/lukabruce/article/details/86219825?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&dist_request_id=1a3294c4-ab50-47a8-a684-7bf67b1ce848&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control">[具体解决办法点击这里]</a></p><p>问题就解决了，不知是Github的问题还是我这个小垃圾电脑设置的问题，今在此记录一下，既是对这种问题的记录又是保存下解决办法</p><h5 style="text-align:right">2021/02/23<br>周二<br>—tangerine702</h5>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hexo素锦主题美化</title>
    <link href="http://example.com/2020/09/28/Hexo%E7%B4%A0%E9%94%A6%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/"/>
    <id>http://example.com/2020/09/28/Hexo%E7%B4%A0%E9%94%A6%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/</id>
    <published>2020-09-28T03:44:18.000Z</published>
    <updated>2021-06-12T08:40:16.009Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="关于hexo站点素锦主题的安装使用流程"><a href="#关于hexo站点素锦主题的安装使用流程" class="headerlink" title="关于hexo站点素锦主题的安装使用流程"></a>关于hexo站点素锦主题的安装使用流程</h2><p><strong>挖坑ing</strong></p><p><strong>准备写一份超长超详细的使用hexo+Github搭建博客的文章</strong></p><p>……</p><hr><blockquote><p>我是参考的<strong>贰货不二</strong>大佬的文章[<a href="https://mrdcg.github.io/2019/07/08/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96--%E4%B8%BB%E9%A2%98/">链接在这</a>]设置的，挺详细的，可以去看看</p></blockquote><hr><p>一开始在Hexo官网上找寻代替初始主题的主题，</p><p>翻着翻着看到了Hexo版的<a href="https://github.com/Fechin/hexo-theme-diaspora">素锦</a></p><p>点进去看了看，对这个主题的好感瞬间爆棚！</p><p>感谢素锦原作者创作出这么好看的主题(原生是WordPress theme)</p><p>🎃&emsp;<a href="https://github.com/LoeiFy/Diaspora">dalao的github地址</a></p><p>同时感谢<strong>Fechin</strong>大佬移植的Hexo版和<strong>贰货不二</strong>大佬写的食用指南（怪我太笨，Fechin大佬的README文件硬是没看懂😓）</p><h1 id="特别提醒：本文现阶段仅适合已经完成Hexo和Git命令行安装的朋友参考"><a href="#特别提醒：本文现阶段仅适合已经完成Hexo和Git命令行安装的朋友参考" class="headerlink" title="特别提醒：本文现阶段仅适合已经完成Hexo和Git命令行安装的朋友参考"></a>特别提醒：本文现阶段仅适合已经完成Hexo和Git命令行安装的朋友参考</h1><hr><h2 id="一、主题下载"><a href="#一、主题下载" class="headerlink" title="一、主题下载"></a>一、主题下载</h2><h4 id="1-首先我们要先下载主题"><a href="#1-首先我们要先下载主题" class="headerlink" title="1.首先我们要先下载主题"></a>1.首先我们要先下载主题</h4><p>进入blog目录下使用Git命令框输入以下命令(右击鼠标点击Git Bash Here即可调出Git命令框)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;Fechin&#x2F;hexo-theme-diaspora.git themes&#x2F;diaspora</span><br></pre></td></tr></table></figure><p>正确输入命令时代码应该为</p><p><code>$ git clone https://github.com/Fechin/hexo-theme-diaspora.git themes/diaspora</code></p><p>回车一下</p><p>即可安装素锦主题</p><h4 id="2-修改配置"><a href="#2-修改配置" class="headerlink" title="2.修改配置"></a>2.修改配置</h4><p>首先找到Hexo的_config.yml文件</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/08/zw1FqeLDOb5f2yY.png" alt="site"></p><p>修改主题关键字为diaspora</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/08/QEMG2KFen1Sm9yA.png"></p><p>先别关，翻到最后面，添加下面一段代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">feed:</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: 20</span><br><span class="line">  hub:</span><br><span class="line">  content:</span><br><span class="line">  content_limit: 140</span><br><span class="line">  content_limit_delim: &#39; &#39;</span><br><span class="line">  order_by: -date</span><br><span class="line">  icon: icon.png</span><br></pre></td></tr></table></figure><p>然后打开位于你创建博客文件夹themes/diaspora目录下的_config.yml</p><p>(注：不是上面那一个，可以理解成上面修改的是你博客的基础设置，而这个是主题内的高级设置)</p><p>开头目录一段添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">分类: &#x2F;categories</span><br><span class="line"> 归档: &#x2F;archives</span><br><span class="line"> 标签云: &#x2F;tags</span><br></pre></td></tr></table></figure><p>其他地方可以看着改</p><p>下一步可以找到博客目录下的scaffolds文件夹</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/08/GD2yUOjzfdkqXaY.png" alt="scaffolds"></p><p>找到post.md并编辑</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/08/LJZIo9tpec1lD2B.png" alt="post.md"></p><p>将内容清空并填写以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories: </span><br><span class="line">tags:</span><br><span class="line">mp3: </span><br><span class="line">cover: </span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>然后再博客目录下创建分类页：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>创建的categories下的index.md修改为以下格式的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 你创建的日期，创建时应该写好了，如果有你就不用动了，格式应该精确到秒，不用修改，这段只是提示</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>给hexo添加rss</p><p>在博客目录下输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>完成后可以添加两篇文章看看效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n “first”   #创建名为first的文章，可以多创建几篇</span><br></pre></td></tr></table></figure><p>创建完后可以写几篇Markdown文章，然后输入以下命令预览</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>出现一个http开头中间有4000字段的链接，应该在最后一行，把它复制下来，用鼠标右键点击copy复制粘贴到浏览器里看看效果</p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/08/t1yhcGki2baAu5Y.png" alt="4000字段"></p><p><strong>提醒Ctrl+C是结束/关闭预览端口，如果你直接按会关闭预览</strong></p><p>如果不错可以直接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>部署到自己的Github中</p><hr><p><code>不过评论功能还没开，但是贰货不二大佬已经写了，感兴趣可以去看看，不久我就会补上的</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Hexo主题" scheme="http://example.com/categories/Hexo%E4%B8%BB%E9%A2%98/"/>
    
    
    <category term="个人博客" scheme="http://example.com/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>你TM还不会Markdown？</title>
    <link href="http://example.com/2020/09/25/%E4%BD%A0TM%E8%BF%98%E4%B8%8D%E4%BC%9AMarkdown%EF%BC%9F/"/>
    <id>http://example.com/2020/09/25/%E4%BD%A0TM%E8%BF%98%E4%B8%8D%E4%BC%9AMarkdown%EF%BC%9F/</id>
    <published>2020-09-25T12:20:44.000Z</published>
    <updated>2021-06-24T11:41:58.643Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="你TM还不会Markdown语法？"><a href="#你TM还不会Markdown语法？" class="headerlink" title="你TM还不会Markdown语法？"></a>你TM还不会Markdown语法？</h2><blockquote><p>没想到吧，Markdown语法介绍用Markdown语法写【滑稽】</p></blockquote><p>这是篇介绍语法的文章，不过咱先别急着看啥语法，首先来看下面这篇实例文章：<br><strong>“</strong><br>&emsp;&emsp; 在<strong>2020</strong>年，如果你还不会使用 <strong>Markdown</strong> 语法标记 <u>文字</u>和<code>代码</code>，那你就错过了一个非常舒适的轻量化标记语言！</p><p>&emsp;&emsp; Markdown 语言在 2004 由约翰·格鲁伯（英语：<em>John Gruber</em>）创建，主要用途就是让人们用纯文本式的格式编写文档且还带有一定简单格式，不用让人硬着头皮研究与自己工作毫不相干的代码从而浪费时间&emsp;【<del>又没有一个摸鱼的理由了呢</del>】</p><p>&emsp;&emsp; 除此之外，Markdown编写的文档也可以转换为HTML、Word、图像、PDF等多种格式；且由于自身支持基本的HTML语法，使得也同时可以使用HTML的闭合标签，例如上面的”<u>下划线</u>“就是由<code>&lt;u&gt;文本&lt;/u&gt;</code>组成</p><p>&emsp;&emsp;不过由于Markdown的定位是<strong>轻量化标记语言</strong>，所以当你的文本需要插入图片或者表格时还是建议采用富文本编辑器吧[Word等]，那才是你需要的！</p><h3 style="text-align:right">by tangerine </h3><hr><p>上面这篇文章已经是一篇成熟的、由Markdown编辑的文章了。我书写此篇文章花费大概不到10min左右，在Word上完成同样的一篇文章大概要10~15min，并且还不能使用代码标记及HTML语法，并且不同版本的Word打开同一篇文章有几率排版被打乱</p><p>不过也不是没有缺点，比如制作<strong>表格</strong>会稍显麻烦，代码如下(其实就是画出来o(<em>￣▽￣</em>)o)</p><pre><code>| / | 第一行 | 第二行 || --- | --- | --- || 第一列 | 文本 | 文本 | | 第二列 | 文本 | 文本 | </code></pre><p>实现出来如下：</p><table><thead><tr><th>/</th><th>第一行</th><th>第二行</th></tr></thead><tbody><tr><td>第一列</td><td>文本</td><td>文本</td></tr><tr><td>第二列</td><td>文本</td><td>文本</td></tr></tbody></table><p>有那时间我咋不直接Word里插入表格呢~</p><p>但是还是上面提出的那个问题，除非你把Word转为PDF，否则多多少少都会有排版问题*[Word简历有时更是惨目忍睹]*。。。</p><p>哦对，Markdown插入图片也是……</p><hr><h6>以上都是作者的一些碎碎念</h6>**不过事物都有两面性，了解它的优点和缺点的话，学习、应用起来思路更清晰哦~**<p>以下就是正文啦~</p><hr><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>好啦，我们正式开始讲语法啦！<br>讲解语法时建议下载一个离线的编辑器，像Typora，Marxico马克飞象桌面端等等<br>当然Marxico马克飞象的Web支持在线同步浏览，写起来更方便啦</p><h4 id="1-标记标题"><a href="#1-标记标题" class="headerlink" title="1.  标记标题"></a><strong>1.</strong>  <strong>标记标题</strong></h4><p>代码如下，自己感悟叭：</p><ul><li>一级标题：  <code>#一级标题</code></li><li>二级标题：  <code>##二级标题</code></li><li>三级标题：  <code>###三级标题</code></li><li>四级标题：  <code>####四级标题</code></li><li>五级标题：  <code>#####五级标题</code></li><li>六级标题：  <code>######六级标题</code></li></ul><p>显示效果如下：<br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/05/2aWp7fq4wBRxdlF.png" alt="标题"></p><hr><h4 id="2-字体"><a href="#2-字体" class="headerlink" title="2. 字体"></a><strong>2.</strong> <strong>字体</strong></h4><p>斜体：<code>*斜体文本代码*</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/05/ujSrNXhwH7aiLJO.png" alt="斜体"></p><p>粗体：<code>**粗体文本代码**</code><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/05/BZFGCi21DHKhXJ4.png" alt="粗体"><br>斜粗体：<code>***斜粗体文本代码***</code><br><img src= "/img/loading.gif" data-lazy-src="https://i.loli.net/2021/04/05/zouyxOmsajvV7Kp.png" alt="斜粗体"></p><hr><h4 id="3-段落分行"><a href="#3-段落分行" class="headerlink" title="3. 段落分行"></a><strong>3.</strong> <strong>段落分行</strong></h4><p>我们平时txt文档或者Word都是回车换行<br>不过在Markdown语法中稍有不同<br>换行时<strong>在这句话后面添加两个及以上的空格再按回车</strong>即可判断为换行<br>不过<strong>两个段落中间一个空行</strong>也能判断为段落换行[本人常用]</p><hr><h4 id="4-分隔线"><a href="#4-分隔线" class="headerlink" title="4. 分隔线"></a><strong>4.</strong> <strong>分隔线</strong></h4><p>分割线可以用三个星号<code>***</code>、三个减号<code>---</code>创建分隔线</p><p>或者更秀的，你可以给每个星号/减号中间加空格，这样也不会影响分割线的效果  <a href="%E4%B8%8D%E8%BF%87%E5%B0%B1%E6%98%AF%E5%A4%9A%E8%8A%B1%E7%82%B9%E6%97%B6%E9%97%B4%E7%BD%A2%E4%BA%86">^彩蛋</a></p><hr><h4 id="5-删除线和下划线"><a href="#5-删除线和下划线" class="headerlink" title="5. 删除线和下划线"></a><strong>5.</strong> <strong>删除线和下划线</strong></h4><p>下划线要靠<code>&lt;u&gt;&lt;/u&gt;</code>实现，删除线则是Md语法“<code>~~文本~~</code>”</p><p>具体样式为：</p><p><strong>下划线：</strong><u>文本示例</u></p><p><strong>删除线：</strong><del>文本示例</del></p><hr><h4 id="6-无序列表、有序列表and列表嵌套"><a href="#6-无序列表、有序列表and列表嵌套" class="headerlink" title="6. 无序列表、有序列表and列表嵌套"></a><strong>6.</strong> <strong>无序列表、有序列表and列表嵌套</strong></h4><p>Markdown支持无序列表和有序列表</p><p>无序列表常用**<code>星号[*]</code>**   、 <strong><code>加号[+] </code></strong>  、  <strong><code>减号[-]</code>**作为起始，而有序列表则是</strong>对应数字<strong>加上一个</strong>英文**<code>句号[.]</code></p><p>无序列表和有序列表<strong>都需要</strong>在 <strong>对应符号</strong>  *<em>(<em>、+、-、对应数字)</em></em>后添加一个空格以区分</p><p>例如以下无序列表示例：</p><ul><li>第一项 <code>* 第一项</code></li><li>第二项 <code>+ 第二项</code></li><li>第三项 <code>- 第三项</code></li></ul><p>以下有序列表示例：</p><ol><li>第一项 <code>1. 第一项</code></li><li>第二项 <code>2. 第二项</code></li><li>第三项 <code>3. 第三项</code></li></ol><p>列表嵌套只需要在子列表的选项前面添加一个空格即可[即一个tab键]</p><p>例如：</p><ol><li>有序列表第一项                <code>1. 有序列表第一项</code><ul><li>有序列表第一项嵌套        <code>   - 有序列表第一项嵌套</code></li></ul></li></ol><ul><li>无序列表第一项                <code>- 无序列表第一项</code><ul><li>无序列表第一项嵌套        <code>- 无序列表第一项嵌套</code></li></ul></li></ul><hr><h4 id="7-引用区块"><a href="#7-引用区块" class="headerlink" title="7.引用区块"></a><strong>7.引用区块</strong></h4><p>一个大于<code>&gt;</code>后面一个空格即可</p><p>例如下面：</p><blockquote><p>示例文本</p></blockquote><p><code>&gt; 示例文本</code></p><p>引用里面也可以添加各种东西，比如有序列表、无序列表</p><blockquote><p>文本</p><ol><li>有序列表</li></ol><ul><li>无序列表</li></ul></blockquote><p>还能无限嵌套！[<del>禁止套娃</del>]</p><blockquote><p>最外层</p><blockquote><p>第一层</p><blockquote><p>第二层</p></blockquote></blockquote></blockquote><hr><h4 id="8-引用代码"><a href="#8-引用代码" class="headerlink" title="8.引用代码"></a><strong>8.引用代码</strong></h4><p>代码片段可以用反引号`` `把它包起来就行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#96;printf()&#96; 函数</span><br></pre></td></tr></table></figure><p><code>printf()</code> 函数</p><p>一段代码可以用三个 <code>```</code>包裹起来形成</p><p> 例如： <code>Hello,World</code></p><p><code>[```Hello,World```]</code></p><p>还能指定一种语言：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">```C</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>;</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Hello,World!\n&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p><strong>像上面这种代码区块只要按一下TAB键或者四个空格就可</strong></p><hr><h4 id="9-插入链接"><a href="#9-插入链接" class="headerlink" title="9.插入链接"></a><strong>9.插入链接</strong></h4><p>这是一个百度链接<a href="https://www.baidu.com/">baidu链接</a></p><p>代码：<code>这是一个百度链接[baidu链接](https://www.baidu.com/)</code></p><hr><h4 id="10-插入图片"><a href="#10-插入图片" class="headerlink" title="10.插入图片"></a><strong>10.插入图片</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![alt 属性文本](图片地址)</span><br><span class="line"></span><br><span class="line">![alt 属性文本](图片地址 &quot;可选标题&quot;)</span><br></pre></td></tr></table></figure><ul><li>开头一个感叹号 !</li><li>接着一个方括号，里面放上图片的替代文字</li><li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。</li></ul><p>使用实例：</p><p><img src= "/img/loading.gif" data-lazy-src="https://upload.wikimedia.org/wikipedia/zh/thumb/0/00/Lovelive_sunshine_2nd_lovelive_logo.png/220px-Lovelive_sunshine_2nd_lovelive_logo.png" alt="图片"></p><p>代码：<code>![图片]（链接）</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="语法" scheme="http://example.com/tags/%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
</feed>
