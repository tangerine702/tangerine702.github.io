<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>tangerine702の小屋</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-02-24T06:32:03.080Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>tangerine702</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>植物大战僵尸自制教程(皮肤修改)</title>
    <link href="http://example.com/2021/02/23/%E6%A4%8D%E7%89%A9%E5%A4%A7%E6%88%98%E5%83%B5%E5%B0%B8%E8%87%AA%E5%88%B6%E6%95%99%E7%A8%8B-%E7%9A%AE%E8%82%A4%E4%BF%AE%E6%94%B9/"/>
    <id>http://example.com/2021/02/23/%E6%A4%8D%E7%89%A9%E5%A4%A7%E6%88%98%E5%83%B5%E5%B0%B8%E8%87%AA%E5%88%B6%E6%95%99%E7%A8%8B-%E7%9A%AE%E8%82%A4%E4%BF%AE%E6%94%B9/</id>
    <published>2021-02-23T12:35:33.000Z</published>
    <updated>2021-02-24T06:32:03.080Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>前几天突然想玩植物大战僵尸了，不过因为以前已经全通关了(指拿到了银向日葵奖杯，我是个菜鸡哈哈)</p><p>玩了一段时间(也就两天)突然想自制一个植物，让我玩到修改器的感觉（滑稽），遂找寻教程</p><h1 id="以上就是这篇文章诞生的原因【闲的】"><a href="#以上就是这篇文章诞生的原因【闲的】" class="headerlink" title="以上就是这篇文章诞生的原因【闲的】"></a>以上就是这篇文章诞生的原因【闲的】</h1><p>哈哈，开始教程：</p><h3 id="首先你得拿到一份植物大战僵尸的游戏，如果没有的话推荐点击下载"><a href="#首先你得拿到一份植物大战僵尸的游戏，如果没有的话推荐点击下载" class="headerlink" title="首先你得拿到一份植物大战僵尸的游戏，如果没有的话推荐点击下载"></a>首先你得拿到一份植物大战僵尸的游戏，如果没有的话推荐点击<a href="http://pvz4.lonelystar.org/download.htm">下载</a></h3><p>如果我猜的没错的话差不多是这样的：</p><p><img src="D:\hexo\blog\source\img\4.植物大战僵尸皮肤修改\下载得到的样子.jpg" alt="梦开始的样子"></p><p>一般人都知道点击最下面exe是开始游戏，不过咱整点不一样的</p><p>看到上面图有个main.pak，哎~本篇文章讲的就是它：</p><p><code>如果不一样也没关系，找到main.pak文件就可以</code></p><h3 id="首先需要下方提供的文件提取器："><a href="#首先需要下方提供的文件提取器：" class="headerlink" title="首先需要下方提供的文件提取器："></a>首先需要下方提供的文件提取器：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">链接：https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1HHtxd-awm3dTiPXFbpPlrQ </span><br><span class="line">提取码：zjxg </span><br><span class="line">复制这段内容后打开百度网盘手机App，操作更方便哦</span><br></pre></td></tr></table></figure><p>下载后发现</p><p><img src="D:\hexo\blog\source\img\4.植物大战僵尸皮肤修改\xgq解包.jpg" alt="image"></p><h4 id="首先选择解包模式"><a href="#首先选择解包模式" class="headerlink" title="首先选择解包模式"></a>首先选择解包模式</h4><p>上面一行pak文件选择你下载的植物大战僵尸的文件目录中的main.pak文件</p><p>下面一行选择你想把解出来的文件包放在哪里（记好这个目录，等会马上用到）</p><p>确认无误后点击执行</p><p>这时你发现电脑有点卡</p><p>没事，这是正常现象</p><p>等提示解包完毕或者一个提示框突然弹出来</p><p>恭喜，你已经解包成功了！</p><p>然后就结束啦，完结撒花！<del>~</del></p><p>。。。。</p><p>才怪嘞！</p><h3 id="接下来找到刚才你把包输出的地方（其实就是你上面第二行填的目录那里）"><a href="#接下来找到刚才你把包输出的地方（其实就是你上面第二行填的目录那里）" class="headerlink" title="接下来找到刚才你把包输出的地方（其实就是你上面第二行填的目录那里）"></a>接下来找到刚才你把包输出的地方（其实就是你上面第二行填的目录那里）</h3><p>出现一个pak文件夹</p><p>点击进入它</p><p>发现一堆文件：compiled，data，images等</p><p><strong>这次我们主要修改的就是images文件夹和倒数第二个reamin文件夹</strong></p><blockquote><p>首先说明：</p><p>pak文件最好备份一份，否则改错了只能重新解包，比较麻烦</p><p>images是存放地图和一些启动图的地方，最好是直接在原图上修改，避免改错了出麻烦</p><p>reanim是存放植物和僵尸身体各部分的贴图的地方，动作文件有个后缀是.fla，这个文件暂时不要动，其他的可以轻度在原图上改改，比如画个滑稽脸嘻嘻</p></blockquote><p>等你改完了，我们还需要再打开一次刚才你下载的提取器，点击打包模式，选择刚才你解包选择的那个main.pak文件</p><p>紧接着选择你已经修改完的pak文件</p><p>点击执行！</p><p>还是熟悉的电脑一阵卡顿后，弹出提示框表示：爷已经打好包了，你快给我进去看看！</p><p>发现修改完毕，OK，你已经迈入了魔改植物大战僵尸的第一步啦！~</p><p>庆祝撒花<em>★,°</em>:.☆(￣▽￣)/$:<em>.°★</em> 。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>解决GitHub图片打不开的问题</title>
    <link href="http://example.com/2021/02/16/%E8%A7%A3%E5%86%B3GitHub%E5%9B%BE%E7%89%87%E6%89%93%E4%B8%8D%E5%BC%80%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2021/02/16/%E8%A7%A3%E5%86%B3GitHub%E5%9B%BE%E7%89%87%E6%89%93%E4%B8%8D%E5%BC%80%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2021-02-16T03:38:00.000Z</published>
    <updated>2021-02-23T09:22:38.888Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>提示：此文章转载自CSDN上的Antrn博主的文章：<a href="https://blog.csdn.net/qq_38232598/article/details/91346392">【最新】解决Github网页上图片显示失败的问题</a></p><p>有兴趣的可以去瞧瞧。这位博主分析的很全，小生受教了</p></blockquote><p>由于Github是国外的服务器，而上面存储图片的服务器也是在国外，所以国内的用户有时会出现图片不能显示的情况，这可能是</p><ol><li>dns被污染了</li><li>host设置错误</li><li>官方更新了dns，而用户电脑上没有同步更新dns导致不同步所发生的错误</li></ol><p>所以解决方法也很简单，找到C:\Windows\System32\drivers\etc\hosts这个路径，用记事本或者任何能阅读并修改它的软件打开（例如Sublime Text或者vscode等）</p><p>在文件的最后一行添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"># GitHub Start </span><br><span class="line">140.82.113.3      github.com</span><br><span class="line">140.82.114.20     gist.github.com</span><br><span class="line"></span><br><span class="line">151.101.184.133    assets-cdn.github.com</span><br><span class="line">151.101.184.133    raw.githubusercontent.com</span><br><span class="line">199.232.28.133     raw.githubusercontent.com </span><br><span class="line">151.101.184.133    gist.githubusercontent.com</span><br><span class="line">151.101.184.133    cloud.githubusercontent.com</span><br><span class="line">151.101.184.133    camo.githubusercontent.com</span><br><span class="line">199.232.96.133     avatars.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars0.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars0.githubusercontent.com</span><br><span class="line">199.232.28.133     avatars0.githubusercontent.com </span><br><span class="line">199.232.28.133     avatars1.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars1.githubusercontent.com</span><br><span class="line">151.101.108.133    avatars1.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars2.githubusercontent.com</span><br><span class="line">199.232.28.133     avatars2.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars3.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars3.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars4.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars4.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars5.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars5.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars6.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars6.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars7.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars7.githubusercontent.com</span><br><span class="line">151.101.184.133    avatars8.githubusercontent.com</span><br><span class="line">199.232.68.133     avatars8.githubusercontent.com</span><br><span class="line">199.232.96.133     avatars9.githubusercontent.com</span><br><span class="line"></span><br><span class="line"># GitHub End</span><br></pre></td></tr></table></figure><p>保存即可</p><p>然后使用命令行刷新本机的dns</p><p>win键+R输入cmd打开命令行</p><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig &#x2F;flushdns</span><br></pre></td></tr></table></figure><p>即可</p><p>如果还是不显示可以试着重启一下电脑，一般就可以了</p><hr><p>还有一情况，Github在2021年2月23日大概12点~2点左右挂过一会，不知道是我的地址设置问题还是那一会都这样，上述时间内我用手机登录个人的Github站点和去hexo登录其他dalao挂在Github的站点均出现了连接已重置问题，f12错误提示<strong>ERR_CONNECTION_RESET</strong></p><p>而在5点左右我采用了csdn大佬卢子墨的解决方法后<a href="https://blog.csdn.net/lukabruce/article/details/86219825?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&dist_request_id=1a3294c4-ab50-47a8-a684-7bf67b1ce848&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control">[具体解决办法点击这里]</a></p><p>问题就解决了，不知是Github的问题还是我这个小垃圾电脑设置的问题，今在此记录一下，既是对这种问题的记录又是保存下解决办法</p><h5 style="text-align:right">2021/02/23</h5><h5 style="text-align:right">周二</h5><h5 style="text-align:right">—tangerine702</h5>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hexo和GitHub制作个人blog</title>
    <link href="http://example.com/2020/11/09/Hexo%E5%92%8CGitHub%E5%88%B6%E4%BD%9C%E4%B8%AA%E4%BA%BAblog/"/>
    <id>http://example.com/2020/11/09/Hexo%E5%92%8CGitHub%E5%88%B6%E4%BD%9C%E4%B8%AA%E4%BA%BAblog/</id>
    <published>2020-11-09T10:52:02.000Z</published>
    <updated>2021-02-06T08:33:11.807Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>填坑ing…</p><hr><h2 id="如何用Hexo和GitHub制作出个人博客-超详细小白版"><a href="#如何用Hexo和GitHub制作出个人博客-超详细小白版" class="headerlink" title="如何用Hexo和GitHub制作出个人博客(超详细小白版)"></a>如何用Hexo和GitHub制作出个人博客(超详细小白版)</h2><p>我觉得使用一个工具之前，要先了解这个工具</p><p>当然，这个所谓的“Hexo”和”GitHub”也一样</p><h3 id="先看一段Hexo的官方定义："><a href="#先看一段Hexo的官方定义：" class="headerlink" title="先看一段Hexo的官方定义："></a>先看一段Hexo的官方定义：</h3><blockquote><p>Hexo 是一个快速、简洁且高效的<strong>博客框架</strong>。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p></blockquote><p><strong>关键词：博客框架、Markdown</strong></p><p> 然后是GitHub的：</p><blockquote><p>GitHub 是一个面向<a href="https://baike.baidu.com/item/%E5%BC%80%E6%BA%90/20720669">开源</a>及私有<a href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6/12053">软件</a>项目的<strong>托管</strong>平台，因为只支持<strong>Git</strong>作为唯一的版本库格式进行托管，故名 GitHub。</p></blockquote><p><strong>关键词：开源、托管平台、Git</strong></p><p>…</p><p>接下来，我会直接给出以上关键词的含义，不过度娘也有，看不懂我这个的可以去翻翻度娘</p><ol><li>博客框架：做博客都需要的框架，一般来说找一个稳定主流的就行，比如我们本文用到的Hexo</li><li>Markdown：一种标记语言，后缀名为.md</li><li>开源：指编写此软件/程序的代码全部公开的行为</li><li>托管平台：如果你没有自己单独的域名的话，某些网站会在它自己的域名下面替你建立一个子域名，比如本教程用到的GitHub</li><li>Git：是一个带有版本管理的分布式控制系统</li></ol><hr><p>下面就是准备工作的大体流程：</p><ol><li><p>下载Git</p></li><li><p>注册GitHub</p></li><li><p>将Git与GitHub连接起来</p><p>[1]获取ssh密钥：id_rsa.pub</p><p>[2]GitHub里，找到settings，填入密钥</p></li></ol><hr><h3 id="第1步：下载Git"><a href="#第1步：下载Git" class="headerlink" title="第1步：下载Git"></a>第1步：下载Git</h3><p>①首先我们登录到<a href="https://git-scm.com/">Git</a>的官网下载：<a href="https://git-scm.com/">https://git-scm.com/</a></p><p>②出现页面时点击Download下载**<em>(下载最新版)**</em></p><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/3.%E4%B8%AA%E4%BA%BAblog/%E4%B8%8B%E8%BD%BDgit.png" alt="下载git"></p><p>接下来，我们就像在网上下载并安装软件一样安装我们刚下载完的Git就可以了</p><h3 id="第2步：注册一个属于你的GitHub账号"><a href="#第2步：注册一个属于你的GitHub账号" class="headerlink" title="第2步：注册一个属于你的GitHub账号"></a>第2步：注册一个属于你的GitHub账号</h3><p>下载完了Git，我们还需要一个托管你博客代码的平台，而GitHub就是现阶段最合适的代码托管平台</p><p>接下来，跟着本篇文章一起注册GitHub账号吧！</p><ol><li><h5 id="首先打开GitHub官网：https-github-com-并输入相关信息进行注册"><a href="#首先打开GitHub官网：https-github-com-并输入相关信息进行注册" class="headerlink" title="首先打开GitHub官网：https://github.com/ 并输入相关信息进行注册"></a>首先打开<a href="https://github.com/">GitHub</a>官网：<a href="https://github.com/">https://github.com/</a> 并输入相关信息进行注册</h5></li></ol><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/3.%E4%B8%AA%E4%BA%BAblog/GitHub%E5%AE%98%E7%BD%91.png" alt="GitHub官网"></p><ol start="2"><li><h5 id="注册完就会出现以下界面："><a href="#注册完就会出现以下界面：" class="headerlink" title="注册完就会出现以下界面："></a>注册完就会出现以下界面：</h5><p>创建你的第一个仓库</p><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/3.%E4%B8%AA%E4%BA%BAblog/%E6%98%BE%E7%A4%BA%E7%95%8C%E9%9D%A2.png" alt="显示界面"></p></li></ol><ol start="3"><li><h5 id="仓库设置（注：仓库的命名规则为你创建账号的名字-github-io）"><a href="#仓库设置（注：仓库的命名规则为你创建账号的名字-github-io）" class="headerlink" title="仓库设置（注：仓库的命名规则为你创建账号的名字.github.io）"></a>仓库设置<em>（注：仓库的命名规则为你创建账号的名字.github.io）</em><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/3.%E4%B8%AA%E4%BA%BAblog/%E4%BB%93%E5%BA%93%E8%AE%BE%E7%BD%AE.jpg" alt="仓库设置"></h5><p>点击   👆     这个绿色的按钮就完成了你的第一个代码仓库的创建，是不是很简单呢？</p></li></ol><ol start="4"><li><h5 id="获取能将Git和GitHub连接起来的ssh密钥"><a href="#获取能将Git和GitHub连接起来的ssh密钥" class="headerlink" title="获取能将Git和GitHub连接起来的ssh密钥"></a>获取能将Git和GitHub连接起来的ssh密钥</h5><p>单击桌面右键，选择“Git Bash Here”</p></li></ol><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/3.%E4%B8%AA%E4%BA%BAblog/%E5%8F%B3%E9%94%AE.png" alt="右键"></p><p>​      输入“ssh-keygen”命令回车，得到你的ssh密钥文件地址</p><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/3.%E4%B8%AA%E4%BA%BAblog/ssh%E5%AF%86%E9%92%A5.png" alt="ssh密钥"></p><p>注：文件地址处应为你的ssh密钥地址，在资源管理器/此电脑上输入/查找此地址即可看到</p><p>找到id_rsa.pub文件</p><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/3.%E4%B8%AA%E4%BA%BAblog/ssh%E6%96%87%E4%BB%B6%E5%9C%B0%E5%9D%80.png" alt="ssh文件地址"></p><h5 id="注意，此文件内有两个文件，一个是id-rsa-一个是id-rsa-pub，选择带pub的那一个（第二个），win7右键鼠标用记事本打开，win10可以选择右键点击打开方式选择记事本"><a href="#注意，此文件内有两个文件，一个是id-rsa-一个是id-rsa-pub，选择带pub的那一个（第二个），win7右键鼠标用记事本打开，win10可以选择右键点击打开方式选择记事本" class="headerlink" title="注意，此文件内有两个文件，一个是id_rsa,一个是id_rsa.pub，选择带pub的那一个（第二个），win7右键鼠标用记事本打开，win10可以选择右键点击打开方式选择记事本"></a>注意，此文件内有两个文件，一个是id_rsa,一个是id_rsa.pub，选择带pub的那一个（第二个），win7右键鼠标用记事本打开，win10可以选择右键点击打开方式选择记事本</h5><p>把里面的所有东西复制下来</p><p>登陆你的GitHub账号，进入你刚刚创建的仓库，找到顶部的黑条</p><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/3.%E4%B8%AA%E4%BA%BAblog/%E9%BB%91%E6%9D%A1.png" alt="黑条"></p><p>点击右面头像旁边的倒三角号</p><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/3.%E4%B8%AA%E4%BA%BAblog/%E5%80%92%E4%B8%89%E8%A7%92.png" alt="倒三角"></p><p>出现下拉选择栏</p><p>选择“设置”进入设置界面</p><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/3.%E4%B8%AA%E4%BA%BAblog/%E5%80%92%E4%B8%89%E8%A7%92%E6%8B%89%E6%9D%A1.png" alt="倒三角拉条"></p><p>选择“SSH and GPG keys”</p><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/3.%E4%B8%AA%E4%BA%BAblog/%E5%A1%AB%E5%86%99%E5%AF%86%E9%92%A5.png" alt="填写密钥"></p><p>新建SSH密钥</p><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/3.%E4%B8%AA%E4%BA%BAblog/%E6%96%B0%E5%BB%BAssh%E5%AF%86%E9%92%A5.png" alt="新建ssh密钥"></p><p>填写你刚刚复制的东西</p><p>得到一个SSH密钥<br><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/3.%E4%B8%AA%E4%BA%BAblog/SSH%E5%9B%BE%E7%89%87.png" alt="SSH图片"></p><h3 id="第3步：node-js安装"><a href="#第3步：node-js安装" class="headerlink" title="第3步：node.js安装"></a>第3步：node.js安装</h3><p>浏览器搜索“node.js”进入官网如图</p><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/3.%E4%B8%AA%E4%BA%BAblog/node.js.jpg" alt="node.js"></p><p>点击下载LTS版即可（长期支持版）</p><p>下载完成安装就可以啦</p><p>安装完毕以后可以用cmd（快捷键win+R在运行框中输入cmd）输入</p><p><code> node -v</code></p><p>和<br><code> npm -v</code></p><p>查看安装是否成功</p><p>如果显示版本号则成功</p><p>【百度一下有很多安装教程】</p><h3 id="第四步：安装Hexo博客框架"><a href="#第四步：安装Hexo博客框架" class="headerlink" title="第四步：安装Hexo博客框架"></a>第四步：安装Hexo博客框架</h3><p>桌面右键点击“Git Bash Here”进入小黑框</p><p>输入<code> npm install -g hexo-cli</code>回车安装hexo框架</p><p>倒数第二行出现一个+ hexo-cli@版本号格式的一句话就表明你已经安装成功了</p><p>关闭桌面的这个小黑框</p><h3 id="第五步：创立博客文件夹并安装依赖"><a href="#第五步：创立博客文件夹并安装依赖" class="headerlink" title="第五步：创立博客文件夹并安装依赖"></a>第五步：创立博客文件夹并安装依赖</h3><p>在你电脑的任何一个盘里创建一个用于存放博客本地文件的文件夹</p><p>例如在D盘里新建一个hexo文件夹，里面新建一个“blog”文件夹用于存放博客资源</p><p>在blog文件夹内部**(注意不是hexo里面，而是hexo里面的blog)**</p><p>blog文件夹也可以称为“博客根目录”</p><p>右键“Git Bash Here”打开博客文件夹里这个小黑框</p><p>输入：<code> hexo init</code>将文件夹初始化</p><p>初始化完后你就会发现一堆文件</p><p>这时候别关那个小黑框</p><p>恭喜，已经完成进度的2/3啦</p><p><strong>接下来安装Hexo的依赖</strong></p><p>输入：<code> hexo install</code></p><p>等待安装完毕</p><p>然后输入<code> git push origin master</code></p><p>会出现一串不明意义的东西</p><p>然后出现一句话:<code> Username for  &#39;https://github.com&#39;:</code></p><p>在后面输入你上面创建的代码仓库名字</p><p>会弹出让你配置SSH密码</p><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/3.%E4%B8%AA%E4%BA%BAblog/SSH.jpg" alt="SSH"></p><p>输入你注册的Github账户的密码就可以啦</p><h3 id="第六步：连接仓库"><a href="#第六步：连接仓库" class="headerlink" title="第六步：连接仓库"></a>第六步：连接仓库</h3><p>还记得上面创建的那个Github代码仓库嘛</p><p>对，要对他下手了hahahh</p><p>打开仓库，进入仓库找到这个界面</p><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/3.%E4%B8%AA%E4%BA%BAblog/%E4%BB%93%E5%BA%93%E8%BF%9E%E6%8E%A5.jpg" alt="仓库连接"></p><p>点击code会出现一个html连接</p><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/3.%E4%B8%AA%E4%BA%BAblog/%E4%BB%93%E5%BA%93%E8%BF%9E%E6%8E%A5%E4%BB%A3%E7%A0%81.jpg" alt="仓库连接代码"></p><p>复制此链接</p><p>填写进博客本地文件夹里的_config.yml文件里，可以用记事本等文字阅读更改软件打开</p><p><strong>本地的_config.yml文件就是文件夹初始化时产生的，并排有.gitignore等文件</strong></p><p>翻到最后，有一行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">  type:_&#39;git&#39;</span><br><span class="line">  repo:_                         &#x2F;&#x2F;自己刚才赋值的链接</span><br></pre></td></tr></table></figure><p>在repe处填写上你刚才复制的那个链接进行保存，最后这一小段一定要和以上代码格式一样</p><p><strong>填写时要在分号后面空一格，这是格式，为了方便看出，我在空格处用了”_”做标识，实际是没有的</strong></p><h4 id="填写完以后，我们先安装一个hexo插件"><a href="#填写完以后，我们先安装一个hexo插件" class="headerlink" title="填写完以后，我们先安装一个hexo插件"></a>填写完以后，我们先安装一个hexo插件</h4><p>输入 <code>npm install hexo-deployer-git --save</code> ，即可等待其安装了。</p><p>然后再次打开刚才打开过的_config.yml文件,在repo下面填一行：</p><p><code>branch: master</code></p><p>保存</p><h3 id="第七步：上传"><a href="#第七步：上传" class="headerlink" title="第七步：上传"></a>第七步：上传</h3><p>很简单，在博客根目录也就是blog目录下右键“Git Bash Here”</p><p>输入<code> hexo g</code>生成博客</p><p>输入<code> hexo d</code>上传博客</p><p>如果让你配置博客的账号和密码</p><p>输入以下指令填写账号密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p><code> git config --global user.name &quot;你的用户名&quot;</code></p><p>配置好后再次输入hexo d</p><p>如图登录你的Github账号密码</p><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/3.%E4%B8%AA%E4%BA%BAblog/github%E7%99%BB%E5%BD%95.jpg" alt="登录界面"></p><p>然后就完成啦！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Hexo主题" scheme="http://example.com/categories/Hexo%E4%B8%BB%E9%A2%98/"/>
    
    
    <category term="个人博客" scheme="http://example.com/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hexo素锦主题美化</title>
    <link href="http://example.com/2020/09/28/Hexo%E7%B4%A0%E9%94%A6%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/"/>
    <id>http://example.com/2020/09/28/Hexo%E7%B4%A0%E9%94%A6%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/</id>
    <published>2020-09-28T03:44:18.000Z</published>
    <updated>2021-02-04T15:44:31.685Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="关于hexo站点素锦主题的安装使用流程"><a href="#关于hexo站点素锦主题的安装使用流程" class="headerlink" title="关于hexo站点素锦主题的安装使用流程"></a>关于hexo站点素锦主题的安装使用流程</h2><p><strong>挖坑ing</strong></p><p><strong>准备写一份超长超详细的使用hexo+Github搭建博客的文章</strong></p><p>……</p><hr><blockquote><p>我是参考的<strong>贰货不二</strong>大佬的文章[<a href="https://mrdcg.github.io/2019/07/08/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96--%E4%B8%BB%E9%A2%98/">链接在这</a>]设置的，挺详细的，可以去看看</p></blockquote><hr><p>一开始在Hexo官网上找寻代替初始主题的主题，</p><p>翻着翻着看到了Hexo版的<a href="https://github.com/Fechin/hexo-theme-diaspora">素锦</a></p><p>点进去看了看，对这个主题的好感瞬间爆棚！</p><p>感谢素锦原作者创作出这么好看的主题(原生是WordPress theme)</p><p>🎃&emsp;<a href="https://github.com/LoeiFy/Diaspora">dalao的github地址</a></p><p>同时感谢<strong>Fechin</strong>大佬移植的Hexo版和<strong>贰货不二</strong>大佬写的食用指南（怪我太笨，Fechin大佬的README文件硬是没看懂😓）</p><h1 id="特别提醒：本文现阶段仅适合已经完成Hexo和Git命令行安装的朋友参考"><a href="#特别提醒：本文现阶段仅适合已经完成Hexo和Git命令行安装的朋友参考" class="headerlink" title="特别提醒：本文现阶段仅适合已经完成Hexo和Git命令行安装的朋友参考"></a>特别提醒：本文现阶段仅适合已经完成Hexo和Git命令行安装的朋友参考</h1><hr><h2 id="一、主题下载"><a href="#一、主题下载" class="headerlink" title="一、主题下载"></a>一、主题下载</h2><h4 id="1-首先我们要先下载主题"><a href="#1-首先我们要先下载主题" class="headerlink" title="1.首先我们要先下载主题"></a>1.首先我们要先下载主题</h4><p>进入blog目录下使用Git命令框输入以下命令(右击鼠标点击Git Bash Here即可调出Git命令框)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;Fechin&#x2F;hexo-theme-diaspora.git themes&#x2F;diaspora</span><br></pre></td></tr></table></figure><p>正确输入命令时代码应该为</p><p><code>$ git clone https://github.com/Fechin/hexo-theme-diaspora.git themes/diaspora</code></p><p>回车一下</p><p>即可安装素锦主题</p><h4 id="2-修改配置"><a href="#2-修改配置" class="headerlink" title="2.修改配置"></a>2.修改配置</h4><p>首先找到Hexo的_config.yml文件</p><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/2.%E7%B4%A0%E9%94%A6%E9%85%8D%E7%BD%AE/site.png" alt="site"></p><p>修改主题关键字为diaspora</p><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/2.%E7%B4%A0%E9%94%A6%E9%85%8D%E7%BD%AE/theme.png" alt="theme"></p><p>先别关，翻到最后面，添加下面一段代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">feed:</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: 20</span><br><span class="line">  hub:</span><br><span class="line">  content:</span><br><span class="line">  content_limit: 140</span><br><span class="line">  content_limit_delim: &#39; &#39;</span><br><span class="line">  order_by: -date</span><br><span class="line">  icon: icon.png</span><br></pre></td></tr></table></figure><p>然后打开位于你创建博客文件夹themes/diaspora目录下的_config.yml</p><p>(注：不是上面那一个，可以理解成上面修改的是你博客的基础设置，而这个是主题内的高级设置)</p><p>开头目录一段添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">分类: &#x2F;categories</span><br><span class="line"> 归档: &#x2F;archives</span><br><span class="line"> 标签云: &#x2F;tags</span><br></pre></td></tr></table></figure><p>其他地方可以看着改</p><p>下一步可以找到博客目录下的scaffolds文件夹</p><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/2.%E7%B4%A0%E9%94%A6%E9%85%8D%E7%BD%AE/scaffolds%E6%96%87%E4%BB%B6%E5%A4%B9.png" alt="scaffolds"></p><p>找到post.md并编辑</p><p><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/2.%E7%B4%A0%E9%94%A6%E9%85%8D%E7%BD%AE/post.png" alt="post.md"></p><p>将内容清空并填写以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories: </span><br><span class="line">tags:</span><br><span class="line">mp3: </span><br><span class="line">cover: </span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>然后再博客目录下创建分类页：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>创建的categories下的index.md修改为以下格式的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 你创建的日期，创建时应该写好了，如果有你就不用动了，格式应该精确到秒，不用修改，这段只是提示</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>给hexo添加rss</p><p>在博客目录下输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>完成后可以添加两篇文章看看效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n “first”   #创建名为first的文章，可以多创建几篇</span><br></pre></td></tr></table></figure><p>创建完后可以写几篇Markdown文章，然后输入以下命令预览</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>出现一个http开头中间有4000字段的链接，应该在最后一行，把它复制下来，用鼠标右键点击copy复制粘贴到浏览器里看看效果</p><p><strong>提醒Ctrl+C是结束/关闭预览端口，如果你直接按会关闭预览</strong></p><p>如果不错可以直接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>部署到自己的Github中</p><hr><p><code>不过评论功能还没开，但是贰货不二大佬已经写了，感兴趣可以去看看，不久我就会补上的</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Hexo主题" scheme="http://example.com/categories/Hexo%E4%B8%BB%E9%A2%98/"/>
    
    
    <category term="个人博客" scheme="http://example.com/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>你TM还不会Markdown？</title>
    <link href="http://example.com/2020/09/25/%E4%BD%A0TM%E8%BF%98%E4%B8%8D%E4%BC%9AMarkdown%EF%BC%9F/"/>
    <id>http://example.com/2020/09/25/%E4%BD%A0TM%E8%BF%98%E4%B8%8D%E4%BC%9AMarkdown%EF%BC%9F/</id>
    <published>2020-09-25T12:20:44.000Z</published>
    <updated>2021-02-04T15:03:44.637Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="你TM还不会Markdown语法？"><a href="#你TM还不会Markdown语法？" class="headerlink" title="你TM还不会Markdown语法？"></a>你TM还不会Markdown语法？</h2><blockquote><p>没想到吧，Markdown语法介绍用Markdown语法写【滑稽】</p></blockquote><p>这是篇介绍语法的文章，不过咱先别急着看啥语法，首先来看下面这篇实例文章：<br><strong>“</strong><br>&emsp;&emsp; 在<strong>2020</strong>年，如果你还不会使用 <strong>Markdown</strong> 语法标记 <u>文字</u>和<code>代码</code>，那你就错过了一个非常舒适的轻量化标记语言！</p><p>&emsp;&emsp; Markdown 语言在 2004 由约翰·格鲁伯（英语：<em>John Gruber</em>）创建，主要用途就是让人们用纯文本式的格式编写文档且还带有一定简单格式，不用让人硬着头皮研究与自己工作毫不相干的代码从而浪费时间&emsp;【<del>又没有一个摸鱼的理由了呢</del>】</p><p>&emsp;&emsp; 除此之外，Markdown编写的文档也可以转换为HTML、Word、图像、PDF等多种格式；且由于自身支持基本的HTML语法，使得也同时可以使用HTML的闭合标签，例如上面的”<u>下划线</u>“就是由<code>&lt;u&gt;文本&lt;/u&gt;</code>组成</p><p>&emsp;&emsp;不过由于Markdown的定位是<strong>轻量化标记语言</strong>，所以当你的文本需要插入图片或者表格时还是建议采用富文本编辑器吧[Word等]，那才是你需要的！</p><h3 style="text-align:right">by tangerine </h3><hr><p>上面这篇文章已经是一篇成熟的、由Markdown编辑的文章了。我书写此篇文章花费大概不到10min左右，在Word上完成同样的一篇文章大概要10~15min，并且还不能使用代码标记及HTML语法，并且不同版本的Word打开同一篇文章有几率排版被打乱</p><p>不过也不是没有缺点，比如制作<strong>表格</strong>会稍显麻烦，代码如下(其实就是画出来o(<em>￣▽￣</em>)o)</p><pre><code>| / | 第一行 | 第二行 || --- | --- | --- || 第一列 | 文本 | 文本 | | 第二列 | 文本 | 文本 | </code></pre><p>实现出来如下：</p><table><thead><tr><th>/</th><th>第一行</th><th>第二行</th></tr></thead><tbody><tr><td>第一列</td><td>文本</td><td>文本</td></tr><tr><td>第二列</td><td>文本</td><td>文本</td></tr></tbody></table><p>有那时间我咋不直接Word里插入表格呢~</p><p>但是还是上面提出的那个问题，除非你把Word转为PDF，否则多多少少都会有排版问题*[Word简历有时更是惨目忍睹]*。。。</p><p>哦对，Markdown插入图片也是……</p><hr><h6>以上都是作者的一些碎碎念</h6>**不过事物都有两面性，了解它的优点和缺点的话，学习、应用起来思路更清晰哦~**<p>以下就是正文啦~</p><hr><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>好啦，我们正式开始讲语法啦！<br>讲解语法时建议下载一个离线的编辑器，像Typora，Marxico马克飞象桌面端等等<br>当然Marxico马克飞象的Web支持在线同步浏览，写起来更方便啦</p><h4 id="1-标记标题"><a href="#1-标记标题" class="headerlink" title="1.  标记标题"></a><strong>1.</strong>  <strong>标记标题</strong></h4><p>代码如下，自己感悟叭：</p><ul><li>一级标题：  <code>#一级标题</code></li><li>二级标题：  <code>##二级标题</code></li><li>三级标题：  <code>###三级标题</code></li><li>四级标题：  <code>####四级标题</code></li><li>五级标题：  <code>#####五级标题</code></li><li>六级标题：  <code>######六级标题</code></li></ul><p>显示效果如下：<br><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/1.markdown/%E6%A0%87%E9%A2%98.png" alt="标题"></p><hr><h4 id="2-字体"><a href="#2-字体" class="headerlink" title="2. 字体"></a><strong>2.</strong> <strong>字体</strong></h4><p>斜体：<code>*斜体文本代码*</code><br><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/1.markdown/%E6%96%9C%E4%BD%93.png" alt="斜体"><br>粗体：<code>**粗体文本代码**</code><br><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/1.markdown/%E7%B2%97%E4%BD%93.png" alt="粗体"><br>斜粗体：<code>***斜粗体文本代码***</code><br><img src="https://raw.githubusercontent.com/tangerine702/tangerine702.github.io/master/img/1.markdown/%E6%96%9C%E7%B2%97%E4%BD%93.png" alt="斜粗体"></p><hr><h4 id="3-段落分行"><a href="#3-段落分行" class="headerlink" title="3. 段落分行"></a><strong>3.</strong> <strong>段落分行</strong></h4><p>我们平时txt文档或者Word都是回车换行<br>不过在Markdown语法中稍有不同<br>换行时<strong>在这句话后面添加两个及以上的空格再按回车</strong>即可判断为换行<br>不过<strong>两个段落中间一个空行</strong>也能判断为段落换行[本人常用]</p><hr><h4 id="4-分隔线"><a href="#4-分隔线" class="headerlink" title="4. 分隔线"></a><strong>4.</strong> <strong>分隔线</strong></h4><p>分割线可以用三个星号<code>***</code>、三个减号<code>---</code>创建分隔线</p><p>或者更秀的，你可以给每个星号/减号中间加空格，这样也不会影响分割线的效果  <a href="%E4%B8%8D%E8%BF%87%E5%B0%B1%E6%98%AF%E5%A4%9A%E8%8A%B1%E7%82%B9%E6%97%B6%E9%97%B4%E7%BD%A2%E4%BA%86">^彩蛋</a></p><hr><h4 id="5-删除线和下划线"><a href="#5-删除线和下划线" class="headerlink" title="5. 删除线和下划线"></a><strong>5.</strong> <strong>删除线和下划线</strong></h4><p>下划线要靠<code>&lt;u&gt;&lt;/u&gt;</code>实现，删除线则是Md语法“<code>~~文本~~</code>”</p><p>具体样式为：</p><p><strong>下划线：</strong><u>文本示例</u></p><p><strong>删除线：</strong><del>文本示例</del></p><hr><h4 id="6-无序列表、有序列表and列表嵌套"><a href="#6-无序列表、有序列表and列表嵌套" class="headerlink" title="6. 无序列表、有序列表and列表嵌套"></a><strong>6.</strong> <strong>无序列表、有序列表and列表嵌套</strong></h4><p>Markdown支持无序列表和有序列表</p><p>无序列表常用**<code>星号[*]</code>**   、 <strong><code>加号[+] </code></strong>  、  <strong><code>减号[-]</code>**作为起始，而有序列表则是</strong>对应数字<strong>加上一个</strong>英文**<code>句号[.]</code></p><p>无序列表和有序列表<strong>都需要</strong>在 <strong>对应符号</strong>  *<em>(<em>、+、-、对应数字)</em></em>后添加一个空格以区分</p><p>例如以下无序列表示例：</p><ul><li>第一项 <code>* 第一项</code></li><li>第二项 <code>+ 第二项</code></li><li>第三项 <code>- 第三项</code></li></ul><p>以下有序列表示例：</p><ol><li>第一项 <code>1. 第一项</code></li><li>第二项 <code>2. 第二项</code></li><li>第三项 <code>3. 第三项</code></li></ol><p>列表嵌套只需要在子列表的选项前面添加一个空格即可[即一个tab键]</p><p>例如：</p><ol><li>有序列表第一项                <code>1. 有序列表第一项</code><ul><li>有序列表第一项嵌套        <code>   - 有序列表第一项嵌套</code></li></ul></li></ol><ul><li>无序列表第一项                <code>- 无序列表第一项</code><ul><li>无序列表第一项嵌套        <code>- 无序列表第一项嵌套</code></li></ul></li></ul><hr><h4 id="7-引用区块"><a href="#7-引用区块" class="headerlink" title="7.引用区块"></a><strong>7.引用区块</strong></h4><p>一个大于<code>&gt;</code>后面一个空格即可</p><p>例如下面：</p><blockquote><p>示例文本</p></blockquote><p><code>&gt; 示例文本</code></p><p>引用里面也可以添加各种东西，比如有序列表、无序列表</p><blockquote><p>文本</p><ol><li>有序列表</li></ol><ul><li>无序列表</li></ul></blockquote><p>还能无限嵌套！[<del>禁止套娃</del>]</p><blockquote><p>最外层</p><blockquote><p>第一层</p><blockquote><p>第二层</p></blockquote></blockquote></blockquote><hr><h4 id="8-引用代码"><a href="#8-引用代码" class="headerlink" title="8.引用代码"></a><strong>8.引用代码</strong></h4><p>代码片段可以用反引号`` `把它包起来就行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#96;printf()&#96; 函数</span><br></pre></td></tr></table></figure><p><code>printf()</code> 函数</p><p>一段代码可以用三个 <code>```</code>包裹起来形成</p><p> 例如： <code>Hello,World</code></p><p><code>[```Hello,World```]</code></p><p>还能指定一种语言：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">```C</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>;</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Hello,World!\n&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line">```</span><br></pre></td></tr></table></figure><h5>像上面这种代码区块只要按一下TAB键或者四个空格就可</h5><hr><h4 id="9-插入链接"><a href="#9-插入链接" class="headerlink" title="9.插入链接"></a><strong>9.插入链接</strong></h4><p>这是一个百度链接<a href="https://www.baidu.com/">baidu链接</a></p><p>代码：<code>这是一个百度链接[baidu链接](https://www.baidu.com/)</code></p><hr><h4 id="10-插入图片"><a href="#10-插入图片" class="headerlink" title="10.插入图片"></a><strong>10.插入图片</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![alt 属性文本](图片地址)</span><br><span class="line"></span><br><span class="line">![alt 属性文本](图片地址 &quot;可选标题&quot;)</span><br></pre></td></tr></table></figure><ul><li>开头一个感叹号 !</li><li>接着一个方括号，里面放上图片的替代文字</li><li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。</li></ul><p>使用实例：</p><p><img src="https://upload.wikimedia.org/wikipedia/zh/thumb/0/00/Lovelive_sunshine_2nd_lovelive_logo.png/220px-Lovelive_sunshine_2nd_lovelive_logo.png" alt="图片"></p><p>代码：<code>![图片]（链接）</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="语法" scheme="http://example.com/tags/%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
</feed>
